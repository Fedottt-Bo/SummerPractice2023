#version 300 es

precision highp float;
out highp vec4 fColor;

uniform float MaxN;
uniform float Size;
uniform vec2 MinPos;
uniform vec2 MaxPos;
uniform vec2 Aux;

vec2 ComplMul(vec2 N1, vec2 N2)
{
  return vec2(N1.x * N2.x - N1.y * N2.y, N1.x * N2.y + N1.y * N2.x);
}

vec2 ComplDiv(vec2 N1, vec2 N2)
{
  return vec2(dot(N1, N2), N1.y * N2.x - N1.x * N2.y) / dot(N2, N2);
}

vec2 ComplE(vec2 N)
{
  return vec2(cos(N.y), sin(N.y)) * exp(N.x);
}

vec2 ComplSin(vec2 N)
{
  return vec2(sin(N.x) * cosh(N.y), cos(N.x) * sinh(N.y));
}

vec2 ComplCos(vec2 N)
{
  return vec2(cos(N.x) * cosh(N.y), -sin(N.x) * sinh(N.y));
}

vec3 Newton(vec2 Z)
{
  float n = 0.0;

  float i = 0.0;

  while (i < MaxN && dot(Z, Z) < 4.0)
  {
    //Z -= ComplDiv(ComplMul(Z, ComplSin(Z)), ComplSin(Z) + ComplMul(Z, ComplCos(Z)));
    Z -= ComplDiv(ComplSin(Z), ComplCos(Z));

    i += 1.0;
  }

  return vec3(pow(i / (MaxN + 1.0), 0.30), Z);
}

void main(void)
{
  float tx = gl_FragCoord.x / 900.0, ty = gl_FragCoord.y / 900.0;
  vec2 Pos = vec2(MinPos.x * (1.0 - tx) + MaxPos.x * tx, MinPos.y * (1.0 - ty) + MaxPos.y * ty);
  fColor = vec4(Newton(Pos), 1.0);
}
